{
	"info": {
		"_postman_id": "bc81cd18-8270-4cb9-861d-8b204cb20440",
		"name": "Employee Spring Boot Rest Api Tests Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Employee Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has all properties\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.be.a('number');\r",
							"    pm.expect(responseJson.firstName).to.be.a('string');\r",
							"    pm.expect(responseJson.lastName).to.be.a('string');\r",
							"    pm.expect(responseJson.emailId).to.be.a('string');\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Vamsi\",\r\n\t\"lastName\": \"Krishna\",\r\n\t\"emailId\": \"vamsi@test.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/employee-crud-rest/api/v1/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"employee-crud-rest",
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Employees Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should be an array\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an(\"array\");\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/employee-crud-rest/api/v1/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"employee-crud-rest",
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Employee Not Found Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should not be found\", function () {\r",
							"    pm.response.to.have.status(404);      \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/employee-crud-rest/api/v1/employees/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"employee-crud-rest",
						"api",
						"v1",
						"employees",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has all properties\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.be.a('number');\r",
							"    pm.expect(responseJson.firstName).to.be.a('string');\r",
							"    pm.expect(responseJson.lastName).to.be.a('string');\r",
							"    pm.expect(responseJson.emailId).to.be.a('string');\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/employee-crud-rest/api/v1/employees/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"employee-crud-rest",
						"api",
						"v1",
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Employee Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have deleted message\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.deleted).to.be.a('boolean');     \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/employee-crud-rest/api/v1/employees/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"employee-crud-rest",
						"api",
						"v1",
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Unexisting Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have 404 status code\", function () {\r",
							"    pm.response.to.have.status(404);       \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/employee-crud-rest/api/v1/employees/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"employee-crud-rest",
						"api",
						"v1",
						"employees",
						"0"
					]
				}
			},
			"response": []
		}
	]
}